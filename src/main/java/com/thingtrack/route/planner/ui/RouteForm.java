package com.thingtrack.route.planner.ui;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.vaadin.addons.locationtextfield.GeocodedLocation;
import org.vaadin.addons.locationtextfield.LocationTextField;

import com.thingtrack.route.planner.MapQuestOpenDirectionsService;
import com.thingtrack.route.planner.RoutePlannerException;
import com.thingtrack.route.planner.RoutePlannerLayout;
import com.thingtrack.route.planner.model.MapCoordinates;
import com.thingtrack.route.planner.model.Route;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Window.Notification;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.themes.Reindeer;

public class RouteForm extends CustomComponent implements ValueChangeListener {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VerticalLayout verticalLayout_1;
	@AutoGenerated
	private Table maneuversTable;
	@AutoGenerated
	private Button createRouteButton;
	@AutoGenerated
	private Button addStopButton;
	@AutoGenerated
	private CustomizedLocationTextField destStopcustomizedLocationTextField;
	@AutoGenerated
	private CustomizedLocationTextField origStopcustomizedLocationTextField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	
	
	private int stopAsciiCounter = 66;
	Map<Component, MapCoordinates> stops = new HashMap<Component, MapCoordinates>();

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public RouteForm() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		addStopButton.addStyleName(Reindeer.BUTTON_LINK);
		
		origStopcustomizedLocationTextField.setData(1);
		origStopcustomizedLocationTextField.addListener(this);
		destStopcustomizedLocationTextField.setData(2);
		destStopcustomizedLocationTextField.addListener(this);
		
		addStopButton.addListener(new Button.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				
				stopAsciiCounter++;
				int destStopComponentIndex = verticalLayout_1.getComponentIndex(destStopcustomizedLocationTextField);
				CustomizedLocationTextField intermediateCustomizedLocationTextField = new CustomizedLocationTextField(destStopcustomizedLocationTextField.getStopCaption());
				intermediateCustomizedLocationTextField.setDescription("Parada intermedia");
				intermediateCustomizedLocationTextField.addListener(RouteForm.this);
				intermediateCustomizedLocationTextField.setData(destStopcustomizedLocationTextField.getData());
				
				verticalLayout_1.addComponent(intermediateCustomizedLocationTextField, destStopComponentIndex);
				//Update last stop
				destStopcustomizedLocationTextField.setStopCaption(new String(new char[]{(char) stopAsciiCounter}));
				
				int lastIndex = ((Integer) destStopcustomizedLocationTextField.getData()) + 1;
				destStopcustomizedLocationTextField.setData(lastIndex);
			
			}
		});
		
		createRouteButton.addListener(new Button.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {

				routeCalculation();
			}
		});
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("300px");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("300px");
		setHeight("100.0%");
		
		// verticalLayout_1
		verticalLayout_1 = buildVerticalLayout_1();
		mainLayout.addComponent(verticalLayout_1, "top:0.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_1() {
		// common part: create layout
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("100.0%");
		verticalLayout_1.setHeight("100.0%");
		verticalLayout_1.setMargin(false);
		verticalLayout_1.setSpacing(true);
		
		// origStopcustomizedLocationTextField
		origStopcustomizedLocationTextField = new CustomizedLocationTextField(new String(new char[]{65}), "green1");
		origStopcustomizedLocationTextField.setDescription("Primera parada");
		origStopcustomizedLocationTextField.setImmediate(false);
		origStopcustomizedLocationTextField.setWidth("100.0%");
		origStopcustomizedLocationTextField.setHeight("-1px");
		verticalLayout_1.addComponent(origStopcustomizedLocationTextField);
		
		// destStopcustomizedLocationTextField
		destStopcustomizedLocationTextField = new CustomizedLocationTextField(new String(new char[]{66}), "red1");
		destStopcustomizedLocationTextField.setDescription("Última parada");
		destStopcustomizedLocationTextField.setImmediate(false);
		destStopcustomizedLocationTextField.setWidth("100.0%");
		destStopcustomizedLocationTextField.setHeight("-1px");
		verticalLayout_1.addComponent(destStopcustomizedLocationTextField);
		
		// addStopButton
		addStopButton = new Button();
		addStopButton.setCaption("+ Añadir parada");
		addStopButton.setImmediate(true);
		addStopButton.setWidth("-1px");
		addStopButton.setHeight("-1px");
		verticalLayout_1.addComponent(addStopButton);
		
		// createRouteButton
		createRouteButton = new Button();
		createRouteButton.setCaption("Crear ruta");
		createRouteButton.setImmediate(true);
		createRouteButton.setWidth("-1px");
		createRouteButton.setHeight("-1px");
		verticalLayout_1.addComponent(createRouteButton);
		verticalLayout_1.setComponentAlignment(createRouteButton,
				new Alignment(6));
		
		// maneuversTable
		maneuversTable = new Table();
		maneuversTable.setImmediate(false);
		maneuversTable.setWidth("100.0%");
		maneuversTable.setHeight("100.0%");
		verticalLayout_1.addComponent(maneuversTable);
		verticalLayout_1.setExpandRatio(maneuversTable, 1.0f);
		
		return verticalLayout_1;
	}

	@Override
	public void valueChange(ValueChangeEvent event) {
		

		com.vaadin.ui.Field.ValueChangeEvent locationTextFieldEvent = (com.vaadin.ui.Field.ValueChangeEvent) event;
		
		GeocodedLocation geocodedLocation  = (GeocodedLocation) locationTextFieldEvent.getProperty().getValue();
		stops.put(locationTextFieldEvent.getComponent(), new MapCoordinates(geocodedLocation.getLat() , geocodedLocation.getLon()));
		
	}
	
	private void routeCalculation(){
		
		if(stops.size() < 2)
			return;
		
		List<Component> stopComponents = new ArrayList<Component>(stops.keySet());
		Collections.sort(stopComponents, new StopComparator());
		
		List<MapCoordinates> routeCoordinates = new ArrayList<MapCoordinates>();
		for(Component stopComponent : stopComponents)
			routeCoordinates.add(stops.get(stopComponent));
		
		MapQuestOpenDirectionsService mapQuestOpenDirectionsService = MapQuestOpenDirectionsService
				.getInstance();
		
		
		MapCoordinates[] routeCoordinatesArray = new MapCoordinates[routeCoordinates.size()];
		routeCoordinates.toArray(routeCoordinatesArray);
		
		try {
			Route calculatedRoute = mapQuestOpenDirectionsService.getRoute(routeCoordinatesArray);
			
			RoutePlannerLayout routePlannerLayout=  (RoutePlannerLayout) this.getData();
			routePlannerLayout.drawRouteStroke(calculatedRoute);
			
		} catch (RoutePlannerException e) {
			getApplication().getMainWindow().showNotification("Hubo un error calculando la ruta", Notification.TYPE_ERROR_MESSAGE);
		}
		
	}
	
	/* PRIVATE CLASS */
	private class StopComparator implements Comparator<Component>{

		@Override
		public int compare(Component comp0, Component comp1) {
			
			@SuppressWarnings("rawtypes")
			Integer index0 = (Integer) ((LocationTextField) comp0).getData();
			@SuppressWarnings("rawtypes")
			Integer index1 = (Integer) ((LocationTextField) comp1).getData();
			
			return index0.compareTo(index1);
		}
	}

}
