package com.thingtrack.route.planner.ui;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.vaadin.addons.locationtextfield.GeocodedLocation;
import org.vaadin.addons.locationtextfield.GoogleGeocoder;
import org.vaadin.addons.locationtextfield.LocationTextField;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.Property.ValueChangeNotifier;
import com.vaadin.event.MouseEvents;
import com.vaadin.event.MouseEvents.ClickEvent;
import com.vaadin.terminal.ExternalResource;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.ComponentContainer;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.VerticalLayout;

public class CustomizedLocationTextField extends CustomComponent implements
		ValueChangeNotifier {
	
	public enum StopType{
		
		ORIGIN,
		INTERMEDIATE,
		DESTINATION
	} 
	
	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private LocationTextField<GeocodedLocation> stopLocationTextField;

	public LocationTextField<GeocodedLocation> getStopLocationTextField() {
		return stopLocationTextField;
	}

	@AutoGenerated
	private Embedded stopIcon;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	HorizontalLayout locationHorizontalLayout;
	private DateField checkoutDateField;
	private DateField arrivalDateField;
	private Embedded closeEmbedded;

	private List<ValueChangeListener> listeners = new ArrayList<ValueChangeListener>();

	private static final String STOP_ICON_URL = "http://icons.mqcdn.com/icons/stop.png";
	private GoogleGeocoder geocoder = GoogleGeocoder.getInstance();
	private String stopCaption;
	private String stopColor;
	
	private List<ComponentDetachListener> componentDetachListeners;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	public CustomizedLocationTextField(String caption) {

		this.stopCaption = caption;

		buildMainLayout();
		setCompositionRoot(mainLayout);

		buildCloseStopButton();
		
		componentDetachListeners = new ArrayList<ComponentContainer.ComponentDetachListener>();
		
		stopLocationTextField.addListener(new Property.ValueChangeListener() {

			@Override
			public void valueChange(ValueChangeEvent event) {

				for (ValueChangeListener listener : listeners)
					listener.valueChange(event);
			}
		});
	}

	public CustomizedLocationTextField(StopType stopType, String caption, String color) {

		this.stopCaption = caption;
		this.stopColor = color;

		buildMainLayout();
		setCompositionRoot(mainLayout);

		stopLocationTextField.addListener(new Property.ValueChangeListener() {

			@Override
			public void valueChange(ValueChangeEvent event) {

				for (ValueChangeListener listener : listeners)
					listener.valueChange(event);
			}
		});
		
		switch(stopType){
		
		case ORIGIN:
			arrivalDateField.setEnabled(false);
			break;
		case DESTINATION:
			checkoutDateField.setEnabled(false);
		}
		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("58px");

		locationHorizontalLayout = new HorizontalLayout();
		locationHorizontalLayout.setWidth("100%");
		locationHorizontalLayout.setHeight("100%");
		locationHorizontalLayout.setSpacing(true);
		mainLayout.addComponent(locationHorizontalLayout);

		// embedded_1
		stopIcon = new Embedded();
		stopIcon.setImmediate(false);
		stopIcon.setWidth("-1px");
		stopIcon.setHeight("-1px");

		if (stopColor != null)
			stopIcon.setSource(new ExternalResource(STOP_ICON_URL + "?text="
					+ stopCaption + "&color=" + stopColor));

		else
			stopIcon.setSource(new ExternalResource(STOP_ICON_URL + "?text="
					+ stopCaption));

		stopIcon.setType(1);
		stopIcon.setMimeType("image/png");
		locationHorizontalLayout.addComponent(stopIcon);
		locationHorizontalLayout.setComponentAlignment(stopIcon,
				Alignment.MIDDLE_LEFT);

		// locationTextField_1
		stopLocationTextField = new LocationTextField<GeocodedLocation>(
				geocoder, GeocodedLocation.class);
		stopLocationTextField.setImmediate(true);
		stopLocationTextField.setWidth("100%");
		stopLocationTextField.setHeight("-1px");
		stopLocationTextField
				.setDescription("Escribe la dirección de la parada lo más detallada posible");
		locationHorizontalLayout.addComponent(stopLocationTextField);
		locationHorizontalLayout.setComponentAlignment(stopLocationTextField,
				Alignment.MIDDLE_LEFT);
		locationHorizontalLayout.setExpandRatio(stopLocationTextField, 1.0f);

		// Dates layout
		HorizontalLayout horizontalLayout = buildDatesLayout();
		mainLayout.addComponent(horizontalLayout);

		return mainLayout;
	}

	private HorizontalLayout buildDatesLayout() {

		HorizontalLayout horizontalLayout = new HorizontalLayout();
		horizontalLayout.setHeight("100%");
		horizontalLayout.setWidth("100%");
		horizontalLayout.setSpacing(true);

		arrivalDateField = new DateField();
		arrivalDateField.setWidth("118px");
		arrivalDateField.setResolution(DateField.RESOLUTION_MIN);

		horizontalLayout.addComponent(arrivalDateField);
		horizontalLayout.setComponentAlignment(arrivalDateField,
				Alignment.MIDDLE_RIGHT);
		
		checkoutDateField = new DateField();
		checkoutDateField.setWidth("118px");
		checkoutDateField.setResolution(DateField.RESOLUTION_MIN);

		horizontalLayout.addComponent(checkoutDateField);
		horizontalLayout.setComponentAlignment(checkoutDateField,
				Alignment.MIDDLE_RIGHT);


		return horizontalLayout;
	}

	private void buildCloseStopButton() {

		// Close button
		closeEmbedded = new Embedded();
		closeEmbedded.setSource(new ThemeResource("icons/cross.png"));
		closeEmbedded.setImmediate(false);
		closeEmbedded.setWidth("-1px");
		closeEmbedded.setHeight("-1px");
		closeEmbedded.setDescription("Clickea si quieres eliminar la parada");

		locationHorizontalLayout.addComponent(closeEmbedded);
		locationHorizontalLayout.setComponentAlignment(closeEmbedded,
				Alignment.MIDDLE_LEFT);

		closeEmbedded.addListener(new MouseEvents.ClickListener() {

			@Override
			public void click(ClickEvent event) {

				ComponentContainer parentContainer = (ComponentContainer) CustomizedLocationTextField.this
						.getParent();

				if (parentContainer != null){
					
					for(Object listener : componentDetachListeners)
						((ComponentDetachListener) listener).componentDetachedFromContainer(new ComponentDetachEvent(parentContainer, CustomizedLocationTextField.this));
				}
			}
		});

	}

	public String getStopCaption() {

		return this.stopCaption;
	}

	public void setStopCaption(String caption) {

		this.stopCaption = caption;
		
		if(stopColor != null)
			stopIcon.setSource(new ExternalResource(STOP_ICON_URL + "?text="
				+ stopCaption + "&color=" + stopColor));
		
		else stopIcon.setSource(new ExternalResource(STOP_ICON_URL + "?text="
				+ stopCaption));
	}

	@Override
	public void addListener(ValueChangeListener listener) {
		listeners.add((ValueChangeListener) listener);
	}

	@Override
	public void removeListener(ValueChangeListener listener) {
		listeners.remove((ValueChangeListener) listener);
	}

	@Override
	public void setDescription(String description) {
		stopIcon.setDescription(description);
	}

	@Override
	public Object getData() {
		return stopLocationTextField.getData();
	}

	@Override
	public void setData(Object data) {
		stopLocationTextField.setData(data);
	}
	
	@Override
	public void addListener(ComponentDetachListener listener) {
		
		componentDetachListeners.add(listener);
	}
	
	public void setArrivalStopDate(Date arrivalStopDate){
		arrivalDateField.setValue(arrivalStopDate);
	}
	
	public Date getArrivalStopDate(){
		return (Date) arrivalDateField.getValue();
	}

	public void setCheckoutStopDate(Date checkoutStopDate){
		checkoutDateField.setValue(checkoutStopDate);
	}
	
	public Date getCheckoutStopDate(){
		return (Date) checkoutDateField.getValue();
	}

}
